# Javascript Node CircleCI 2.0 configuration file
#
# Check {{ '/2.0/language-javascript/' | docs_url }} for more details
#
# deploy reference: https://circleci.com/blog/publishing-npm-packages-using-circleci-2-0/
#
version: 2
jobs:
  node-latest: &test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache: &restore_cache
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
            - v1-npm-
      - run:
          name: Install dependencies
          command: yarn
      - run: ./bin/run --version
      - run: ./bin/run --help
      - run:
          name: Testing
          command: yarn test
      - run:
          name: Report coverage
          command: yarn report-coverage
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - ~/cli/node_modules
  node-14:
    <<: *test
    docker:
      - image: node:14
  node-12:
    <<: *test
    docker:
      - image: node:12
  cache:
    <<: *test
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - ~/cli/node_modules
            - /usr/local/share/.cache/yarn
            - /usr/local/share/.config/yarn
      - persist_to_workspace:
          root: ~/cli
          paths: .
  deploy:
    <<: *test
    steps:
      - attach_workspace:
          at: ~/cli
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/cli/.npmrc
      - run:
          name: Publish package
          command: npm publish
  publish-github-release:
    <<: *test
    steps:
      - attach_workspace:
          at: ~/cli
      - run:
          name: 'Publish Release on GitHub'
          command: |
            apt-get update
            apt-get install -y golang
            go get github.com/github-release/github-release
            VERSION=$(node ./bin/run --version)
            TAG=$(node ./bin/run --version | awk 'BEGIN { FS = " " } ; { print $1 }' | awk 'BEGIN { FS = "/" } ; { printf "v%s", $2 }')
            EXE=$(node ./bin/run --version | awk 'BEGIN { FS = " " } ; { print $1 }' | awk 'BEGIN { FS = "/" } ; { print $1 }')
            FILE=$(awk -v tag=$TAG -v exe=$EXE 'BEGIN{ t=tag;e=exe } { printf "%s-%s.tgz", e, t}' <<< /dev/null )
            yarn pack
            ~/go/bin/github-release release --user ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --tag ${TAG} --pre-release
            ~/go/bin/github-release upload --user ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --tag ${TAG} --name ${FILE} --file ~/cli/"$FILE"
  publish-tarballs:
    <<: *test
    steps:
      - attach_workspace:
          at: ~/cli
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Pack target tarballs
          command: |
            apt-get update
            apt-get install -y p7zip-full
            yarn ytkit-pack
            yarn ytkit-pubish
notify:
  webhooks:
    # A list of hook hashes, containing the url field
    # gitter hook
    - url: https://webhooks.gitter.im/e/b59f54263a82ada6e41e
workflows:
  version: 2
  'ytdl':
    jobs:
      - node-latest
      - node-14
      - node-12
      - cache:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - cache
            - node-latest
            - node-14
            - node-12
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - publish-github-release:
          requires:
            - cache
            - node-latest
            - node-14
            - node-12
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - publish-tarballs:
          requires:
            - cache
            - node-latest
            - node-14
            - node-12
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
